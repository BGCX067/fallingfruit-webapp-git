<% if request.fullpath.include? "?"
     given_params = request.fullpath.split(/\?/)[1]
     clean_fullpath = locations_path + "?" + given_params.strip.split(/&/).collect{ |p| p =~/^center\_(lat|lng)/ ? nil : p }.compact.join("&") + "&"
   else
     clean_fullpath = locations_path + "?"
   end
%>

<div id="searchbar">
  Controls:
  <input id="address" name="address" value="Zoom to Address" onkeypress="if(event.keyCode == 13){ recenter_map_to_address(); }" onclick="this.value = '';" size="35">
  <button onclick="recenter_map_to_address();">Go</button>
  <span id="recenter_button">
  or <button onclick="recenter_map()">Zoom to Me</button>
  </span>
  <span id="searchbar2" style="display:inline;">
    ::
    <input name="search" id="search" value="Filter (e.g., Apple)" onclick="this.value = '';" onkeypress="if(event.keyCode == 13){ search_filter(); }">
    <button onclick="search_filter();">Go</button>
    :: Labels
    <button onclick="labelize_markers()">On</button> | <button onclick="delabelize_markers()">Off</button>
    :: <a href="#" id="get_data_link">Export Data</a>
  </span>
  ::
  <input type="checkbox" id="muni" value="1" onclick="clear_markers();update_display(true);" <%= "checked" if !@perma.nil? and @perma[:muni] %>> Municipal
  <div style="display:inline;float:right;margin-top:0.5em;"><a href="/" id="permalink">Permalink</a></div>
</div>

<div class="map_container"><div id="map"></div></div>

 <% content_for :scripts do %>
<script src="//maps.google.com/maps/api/js?v=3.8&amp;sensor=false&amp;key=&amp;libraries=geometry&amp;language=&amp;hl=&amp;region=" type="text/javascript"></script>
<script type="text/javascript" charset="utf-8">

  // ================= functions =================

  function initialize() {
    var ini_zoom = 4;
    // Kearney, Nebraska :P
    var ini_lat = 40.713956;
    var ini_lng = -99.09668;
<% unless @perma.nil? %>
    ini_lat = <%= @perma[:lat] %>;
    ini_lng = <%= @perma[:lng] %>;
    ini_zoom = <%= @perma[:zoom] %>;
<% end %>
    var mapOptions = {
      zoom: ini_zoom,
      center: new google.maps.LatLng(ini_lat,ini_lng), // Kearney, Nebraska ;)
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map(document.getElementById('map'),mapOptions);
    geocoder = new google.maps.Geocoder();

    pb = progressBar();
    map.controls[google.maps.ControlPosition.RIGHT].push(pb.getDiv());

    google.maps.event.addListener(map, 'rightclick', function(event) {
      remove_add_marker();
      place_add_marker(event.latLng);
    });

    // load initial cluster display for the whole world
    update_display(true);
           
    google.maps.event.addListener(map, 'bounds_changed', function() {
      google.maps.event.addListenerOnce(map, 'idle', function(){
        update_display(false);
      });
    });
    google.maps.event.addListener(map, 'zoom_changed', function() {
      google.maps.event.addListenerOnce(map, 'idle', function(){
        update_display(false);
      });
    });
    map.setTilt(0); 
  }

  function data_link(){
    var muni = $('muni').checked; 
    var bounds = map.getBounds();
    var bstr = 'nelat=' + bounds.getNorthEast().lat() + '&nelng=' + bounds.getNorthEast().lng() +
           '&swlat=' + bounds.getSouthWest().lat() + '&swlng=' + bounds.getSouthWest().lng();
    var mstr = 0;
    if(muni) mstr = 1;
    return '/locations/data.csv?muni=' + mstr + '&' + bstr;
  }

  function update_display(force){
    var zoom = map.getZoom();
    var bounds = map.getBounds();
    var center = map.getCenter();
    $('permalink').href = '/?perma_zoom=' + zoom + '&perma_lat=' + center.lat() + 
      '&perma_lng=' + center.lng() + '&perma_muni=' + $('muni').checked;
    if(prior_bounds == null && prior_zoom == null){
      $('searchbar2').hide();
      do_clusters(undefined,zoom,$('muni').checked);
      prior_zoom = zoom;
      prior_bounds = bounds;
    }
    if(zoom <= 12){
      if((zoom != prior_zoom) || force){
        $('searchbar2').hide();
        do_clusters(undefined,zoom,$('muni').checked);
      }
    }else if(zoom >= 13){
      $('get_data_link').href = data_link();
      $('searchbar2').show();
      do_markers(bounds,null,$('muni').checked);
    }
    prior_zoom = zoom;
    prior_bounds = bounds;
  }

  // ================== main-level code ===================

  google.maps.event.addDomListener(window, 'load', initialize);

  // hide the 'zoom to me' button if browser isn't supporting geolocation
  if(!navigator.geolocation){
    $('recenter_button').hide();
  }
  navigator.geolocation.getCurrentPosition(function(position){},function(error){
    $('recenter_button').hide();
  });
</script>
<% end %>

<%= yield :scripts %>

<%= javascript_include_tag "maplabel" %>
<%= javascript_include_tag "progressBar" %>
<%= javascript_include_tag "richmarker" %>
<%= javascript_include_tag "mapcommon" %>
