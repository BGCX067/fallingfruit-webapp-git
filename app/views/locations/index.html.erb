<div style="clear: both;">
<style>
.map_container{
   width:99.8%;
   height: 100%;
   padding: 0;
   margin: 0;
   position: relative;
}
.gmaps4rails_map{
   height: 600px;
   width: 100%;
   margin: 0;
   padding: 0;
   position: relative;
}
</style>
<%= gmaps4rails(@locations.to_gmaps4rails) %>

<div id="recenter_button" style="float: right;">
<button onclick="recenter_map()">Zoom Map to My Location</button>
</div>
<div id="recenter_button" style="float: right;">
<input id="address" name="address" value="Any address" onclick="this.value = '';">
<button onclick="recenter_map_to_address()">Zoom</button>
</div>



<div id="filter">
Filter by Type:
<% @types.collect{ |type| %>
  <a href="/locations?type_id=<%= type.id %>"><%= type.name %></a> |
<% } %>
<a href="/locations/">All</a>
<% unless @type.nil? %>
(Current Filter: <%= @type.name %>)
<% end %>
</div>

 <% content_for :scripts do %>
    <script type="text/javascript" charset="utf-8">
        function recenter_map(){
          navigator.geolocation.getCurrentPosition(function(position){
              var lat = position.coords.latitude;
              var lon = position.coords.longitude;
              loc = new google.maps.LatLng(lat,lon);
              Gmaps.map.serviceObject.panTo(loc);
              Gmaps.map.serviceObject.setZoom(14);
              labelize_markers();
          },function(error){
            //use error.code to determine what went wrong
          });
        }

        if(!navigator.geolocation){
          $('recenter_button').hide();
        }
        navigator.geolocation.getCurrentPosition(function(position){},function(error){
          $('recenter_button').hide();
        });

        // see: https://developers.google.com/maps/documentation/javascript/geocoding 
        geocoder = new google.maps.Geocoder();
        function recenter_map_to_address() {
          geocoder.geocode( { 'address': $("address").value }, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
              Gmaps.map.serviceObject.panTo(results[0].geometry.location);
              Gmaps.map.serviceObject.setZoom(14);
              labelize_markers();
            } else {
              alert("Geocode was not successful for the following reason: " + status);
            }
          });
        }

        var markersArray = [];
        // On click, clear markers, place a new one, update coordinates in the form
        Gmaps.map.callback = function() {
            google.maps.event.addListener(Gmaps.map.serviceObject, 'click', function(event) {
              clearOverlays();
              placeMarker(event.latLng);
            });
            google.maps.event.addListener(Gmaps.map.serviceObject, 'center_changed', function() {
              if(Gmaps.map.serviceObject.getZoom() > 10){
                labelize_markers();
              }
            });
        };

        function labelize_markers() {
              var len = Gmaps.map.markers.length;
              for(var i = 0; i < len; i++){
                marker = Gmaps.map.markers[i].serviceObject;
                var mapLabel = new MapLabel({
                  text: marker.getTitle(),
                  position: marker.getPosition(),
                  map: Gmaps.map.serviceObject,
                  fontSize: 10,
                  align: 'right'
                });
                mapLabel.set('position', marker.getPosition());
                marker.bindTo('map', mapLabel);
                marker.bindTo('position', mapLabel);
              } 
        }

        // Add a marker with an open infowindow
        function placeMarker(latLng) {
            var marker = new google.maps.Marker({
                position: latLng, 
                map: Gmaps.map.serviceObject,
                draggable: true
            });
            markersArray.push(marker);
            // Set and open infowindow
            var infowindow = new google.maps.InfoWindow({
                content: '<a href="/locations/new?lat=' + latLng.lat() + '&lng=' + latLng.lng() + 
                         '">Click to add a source here</a><br>(You can drag this thing too)'
            });
            infowindow.open(Gmaps.map.serviceObject,marker);
            // Listen to drag & drop
            google.maps.event.addListener(marker, 'dragend', function() {
                var infowindow = new google.maps.InfoWindow({
                  content: '<a href="/locations/new?lat=' + this.getPosition().lat() +
                           '&lng=' + this.getPosition().lng() + '">Click to add a source here</a><br>(You can drag this thing too)'
                });
                infowindow.open(Gmaps.map.serviceObject,marker);
            });
            google.maps.event.addListener(infowindow,'closeclick',function(){
              clearOverlays();    
            });
        }
        // Removes the overlays from the map
        function clearOverlays() {
          if (markersArray) {
            for (var i = 0; i < markersArray.length; i++ ) {
              markersArray[i].setMap(null);
            }
          }
          markersArray.length = 0;
        }
    </script>
<% end %>
